# golang library for http://taooka.com/

language: go

go:
- tip
- 1.8.1
- 1.8
- 1.7.5
- 1.7.4
- 1.7.3
- 1.7.2
- 1.7.1
- 1.7
- 1.6.4
- 1.6.3
- 1.6.2
- 1.6.1
- 1.6
- 1.5.4
- 1.5.3
- 1.5.2
- 1.5.1
- 1.5
- 1.4.3
- 1.4.2
- 1.4.1
- 1.4

os:
- linux
- osx

env:
- GIMME_ARCH=amd64
- GIMME_ARCH=386

matrix:
  exclude:
  - go: 1.4.3
    env: GIMME_ARCH=386

  - go: 1.4.2
    env: GIMME_ARCH=386

  - go: 1.4.1
    env: GIMME_ARCH=386

  - go: 1.4
    env: GIMME_ARCH=386

# moved to https://drone.io/github.com/MichaelMonashev/sync
#before_install:
#- go get -v -work -x github.com/mattn/goveralls
#- go get -v -work -x golang.org/x/tools/cmd/cover
#- export PATH=$PATH:$GOPATH/bin/:$GOPATH/bin/linux_386/:$GOPATH/bin/darwin_386/
#script:
#- if [[ "$GOARCH" == "amd64" ]]; then go test -v -race -covermode=count -coverprofile=profile.cov ./netmutex; else go test -v -covermode=count -coverprofile=profile.cov ./netmutex; fi
# - goveralls -coverprofile=profile.cov -service=travis-ci

install:
- go get github.com/mattn/goveralls

script:
- pwd
- printenv
- go version
- go env
- go build -v -work -x ./netmutex
- if [ "${GIMME_ARCH}" = "amd64" ]; then go test -cpu=1,2 -v -race ./netmutex; else go test -cpu=1,2 -v ./netmutex; fi
- if [ "${GIMME_ARCH}" = "amd64" ] && [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${TRAVIS_GO_VERSION}" = "1.8" ]; then go test -race -v -coverprofile=coverage.out -covermode=atomic ./netmutex; goveralls -coverprofile=coverage.out -service=travis-ci; fi
- go test -cpu=1,2 -v -run=none -benchmem -benchtime="5s" -bench="Benchmark." ./netmutex

after_success:
- if [ "${GIMME_ARCH}" = "amd64" ] && [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${TRAVIS_GO_VERSION}" = "1.8" ]; then bash <(curl -s https://codecov.io/bash) -v; fi
